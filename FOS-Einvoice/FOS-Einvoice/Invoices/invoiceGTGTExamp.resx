<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
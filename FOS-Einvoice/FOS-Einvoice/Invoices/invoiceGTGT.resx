<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>